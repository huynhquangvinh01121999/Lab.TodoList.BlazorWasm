@page "/tasks/{TodoListId}"
@*@using TodoListBlazorWasm.Services.TodoListServices;*@
@using Microsoft.Extensions.Configuration

@*@inject ITaskApiClient _taskApiClient*@
@inject IConfiguration Configuration

<h3>TodoListDetail: @TodoListId</h3>

@if (TaskVM == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-outline-primary float-right mb-3" @onclick="BackToList">
        <span class="oi oi-arrow-left" aria-hidden="true"></span> Back To List
    </button>
    <table>
        <tr>
            <td>ID:</td>
            <td>@TaskVM.Id</td>
        </tr>
        <tr>
            <td>Title:</td>
            <td>@TaskVM.Title</td>
        </tr>
        <tr>
            <td>Content:</td>
            <td>@TaskVM.Content</td>
        </tr>
        <tr>
            <td>Start Date:</td>
            <td>@TaskVM.StartDate.ToString(Configuration["DateTimeFormat"])</td>
        </tr>
        <tr>
            <td>End Date:</td>
            <td>@TaskVM.EndDate.ToString(Configuration["DateTimeFormat"])</td>
        </tr>
        <tr>
            <td>Mode:</td>
            <td>@TaskVM.Mode</td>
        </tr>
        <tr>
            <td>User Id:</td>
            <td>@TaskVM.UserId</td>
        </tr>
        <tr>
            <td>Type Name:</td>
            <td>@TaskVM.TypesName</td>
        </tr>
    </table>
}

@*@code{
            [Parameter]
            public string TodoListId { get; set; }

            private TaskViewModel TaskVM { get; set; }

            protected override async Task OnInitializedAsync()
            {
                TaskVM = await _taskApiClient.GetTodoByIdAsync(int.Parse(TodoListId));
            }
    }*@
