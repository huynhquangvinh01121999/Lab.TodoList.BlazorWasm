
@using TodoListBlazorWasm.Components;

@if (Types == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
        <div class="modal-dialog modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-center">Add New Todo</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@requestModel" OnValidSubmit="CreateNewTask">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group">
                            <label class="col-form-label">Title:</label>
                            <InputText class="form-control" @bind-Value="@requestModel.Title"></InputText>
                            <ValidationMessage For="() => requestModel.Title"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Content:</label>
                            <InputText class="form-control" @bind-Value="@requestModel.Content"></InputText>
                            <ValidationMessage For="() => requestModel.Content"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Start Date:</label>
                            <InputDate class="form-control" @bind-Value="@requestModel.StartDate"></InputDate>
                            <ValidationMessage For="() => requestModel.StartDate"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">End Date:</label>
                            <InputDate class="form-control" @bind-Value="@requestModel.EndDate"></InputDate>
                            <ValidationMessage For="() => requestModel.EndDate"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">End Date:</label>
                            <InputSelect class="form-control" @bind-Value="@requestModel.Mode">
                                <option value="public">Public</option>
                                <option value="private">Private</option>
                            </InputSelect>
                            <ValidationMessage For="() => requestModel.Mode"></ValidationMessage>
                            <small class="form-text text-muted">Choose a Mode which you want.</small>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Type:</label>
                            <CustomInputSelect class="form-control" @bind-Value="@requestModel.TypeId">
                                @foreach (var item in Types)
                                    {
                                    <option value="@item.Id">@item.Id - @item.Name</option>
                                    }
                            </CustomInputSelect>
                            <ValidationMessage For="() => requestModel.TypeId"></ValidationMessage>
                            <small class="form-text text-muted">Choose a Type which you want.</small>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save changes</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}